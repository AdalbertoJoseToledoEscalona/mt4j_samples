/**
 * 
 */
package componentTransformationsAndCoordinateSpaces;

import org.mt4j.MTApplication;
import org.mt4j.components.MTComponent;
import org.mt4j.components.TransformSpace;
import org.mt4j.components.interfaces.IMTComponent3D;
import org.mt4j.components.visibleComponents.font.FontManager;
import org.mt4j.components.visibleComponents.widgets.MTTextArea;
import org.mt4j.input.IMTInputEventListener;
import org.mt4j.input.inputData.AbstractCursorInputEvt;
import org.mt4j.input.inputData.InputCursor;
import org.mt4j.input.inputData.MTInputEvent;
import org.mt4j.input.inputProcessors.IGestureEventListener;
import org.mt4j.input.inputProcessors.MTGestureEvent;
import org.mt4j.input.inputProcessors.componentProcessors.dragProcessor.DragEvent;
import org.mt4j.input.inputProcessors.componentProcessors.dragProcessor.DragProcessor;
import org.mt4j.sceneManagement.AbstractScene;
import org.mt4j.util.MTColor;
import org.mt4j.util.math.Vector3D;

import components.MyComponent;
import processing.core.PGraphics;

/**
 * @author adalberto
 *
 */
public class ComponentTransformationScene extends AbstractScene {

	/**
	 * @param mtApplication
	 * @param name
	 */
	public ComponentTransformationScene(MTApplication mtApplication, String name) {
		super(mtApplication, name);
		
		MTComponent a = new MTComponent(mtApplication);
		MTComponent b = new MTComponent(mtApplication);
		a.addChild(b);
		a.removeChild(b);
		
		MyComponent component = new MyComponent(mtApplication);
		
		/*MTTextArea component = new MTTextArea(mtApplication, 
				FontManager.getInstance().createFont(mtApplication, "arial.ttf", 
				50,									//Font size
				new MTColor(255, 255, 255, 255),	//Font fill color
				new MTColor(255, 255, 255, 255)));	// Font outline color
		
		component.setNoFill(true);
		//component.setNoStroke(true);
		
		component.setText("Hello World!");*/
		
		component.removeAllGestureEventListeners();
		component.removeAllChildren();
		
		
		
		this.getCanvas().addChild(component);
		
		component.translate(new Vector3D(10, 0, 0), TransformSpace.LOCAL);
		
	}

	/* (non-Javadoc)
	 * @see org.mt4j.sceneManagement.AbstractScene#init()
	 */
	@Override
	public void init() {
		// TODO Auto-generated method stub

	}

	/* (non-Javadoc)
	 * @see org.mt4j.sceneManagement.AbstractScene#shutDown()
	 */
	@Override
	public void shutDown() {
		// TODO Auto-generated method stub

	}
	
	@Override
	public void drawAndUpdate(PGraphics graphics, long timeDelta) {
		super.drawAndUpdate(graphics, timeDelta);
		//System.out.println("timeDelta = " + timeDelta);
	}

}
